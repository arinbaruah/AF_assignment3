---
title: "Assignment 3"
author: "Arindom Baruah (32779267)"
format: html
editor: visual
number-sections: true
execute: 
  warning: false
  message: false
---

# Libraries

```{r}
library(fpp3)
library(tidyverse)
library(tidyverse)
library(kableExtra)
```

# Data

```{r}
#| label: tbl-data
#| tbl-cap: "Glimpse of the data"

set.seed(32779267)
pop <- readr::read_rds("https://bit.ly/monashpopulationdata") |>
  filter(Country == sample(Country, 1))

pop %>% head() %>% kbl()
```

@tbl-data illustrates the timeseries data for the country "Africa Western and Central	AFW" which shall be analysed in the upcoming sections.

# Exercises

## Splitting data into train-test data and fitting benchmark models

Let us first visualise the population growth for the country "Africa Western and Central AFW".

```{r}
#| label: fig-totpop
#| fig-cap: "Population growth in Africa Western and Central AFW"
pop %>% autoplot() + theme_minimal() + labs(title = "Population growth in Africa Western and Central AFW")
```

:::{.callout-note}
# Key takeaway

As we can observe in @fig-totpop, __the population in Africa and Central AFW has grown at an exponential rate__. 

We shall transform our data such that the overall trend of the data is linear. In this regard, __we shall apply a logarithmic transformation of our data.__
:::


```{r}
#| label: fig-totpoplog
#| fig-cap: "Logarithim population growth in Africa Western and Central AFW"

pop_log <- pop %>% mutate(Log_population = log(Population))

pop_log %>% autoplot(Log_population) + theme_minimal() + 
  labs(title = "Logarithmic population growth in Africa Western and Central AFW",y = "Log of population")
```

As we can now observe through @fig-totpoplog, __upon performing the logarithmic transformation, we can observe a linear trend in the growth rate.__



In the next step, we shall split our data into train and test data. The split is formed on the following basis:

- Population data for the years __before 2018__ will be used as the __train dataset__
- Population data for the years __2018 - 2022__ will be used as the __test dataset__

```{r}
pop_train <- pop_log %>% filter(Year < 2018) %>% select(-Population) # Train dataset
pop_test <- pop_log %>% filter(Year >= 2018) %>% select(-Population) # Test dataset
```


Now that we have transformed our data and split it based on training and testing dataset, we will utilise the benchmark models to forecast the logarithmic population growth. The models which will be used are as follows:

- ETS (Error Trend Seasonality) model
- Na誰ve model
- Mean model
- Drift model

As our data does not contain a seasonality component, hence we shall not fit a seasonal na誰ve model.

```{r}
model_fit <- pop_train %>% model(ets = ETS(Log_population), # ETS Model
                    naive = NAIVE(Log_population), # Na誰ve model
                    mean = MEAN(Log_population), # Mean model
                    drift = RW(Log_population ~ drift())) # Drift model
```


Once we have fitted our training data on the ETS model and the benchmark models, we will check the peformance of each of these models. 


```{r}
#| label: tbl-accuracy
#| tbl-cap: "Model performance output metrics"

pop_fc <- model_fit |>
  forecast()

pop_fc %>% accuracy(pop_test) %>% arrange(RMSE) %>% select(-c(ME,MAE,MPE,MAPE,MASE,RMSSE)) %>% kbl()
```

:::{.callout-note}
# Key takeaway

As we can observe in @tbl-accuracy, the __"Drift method"__ is observed to be the model which has forecasted the test dataset with least root mean square error. This is followed by the ETS model, Na誰ve model and the mean model respectively.

__Hence, based on the RMSE values, we can say that the Drift method foreacasts the best for the test dataset.__
:::


